Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> words
Rule 2     expression -> annotation
Rule 3     expression -> words annotation
Rule 4     expression -> words annotation expression
Rule 5     expression -> annotation expression
Rule 6     annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN
Rule 7     words -> WORD
Rule 8     words -> WORD words

Terminals, with rules where they appear

LBRACE               : 6
LPAREN               : 6
RBRACE               : 6
RPAREN               : 6
WORD                 : 6 7 8
error                : 

Nonterminals, with rules where they appear

annotation           : 2 3 4 5
expression           : 4 5 6 0
words                : 1 3 4 8

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . words
    (2) expression -> . annotation
    (3) expression -> . words annotation
    (4) expression -> . words annotation expression
    (5) expression -> . annotation expression
    (7) words -> . WORD
    (8) words -> . WORD words
    (6) annotation -> . LBRACE expression RBRACE LPAREN WORD RPAREN

    WORD            shift and go to state 4
    LBRACE          shift and go to state 5

    expression                     shift and go to state 1
    words                          shift and go to state 2
    annotation                     shift and go to state 3

state 1

    (0) S' -> expression .



state 2

    (1) expression -> words .
    (3) expression -> words . annotation
    (4) expression -> words . annotation expression
    (6) annotation -> . LBRACE expression RBRACE LPAREN WORD RPAREN

    $end            reduce using rule 1 (expression -> words .)
    RBRACE          reduce using rule 1 (expression -> words .)
    LBRACE          shift and go to state 5

    annotation                     shift and go to state 6

state 3

    (2) expression -> annotation .
    (5) expression -> annotation . expression
    (1) expression -> . words
    (2) expression -> . annotation
    (3) expression -> . words annotation
    (4) expression -> . words annotation expression
    (5) expression -> . annotation expression
    (7) words -> . WORD
    (8) words -> . WORD words
    (6) annotation -> . LBRACE expression RBRACE LPAREN WORD RPAREN

    $end            reduce using rule 2 (expression -> annotation .)
    RBRACE          reduce using rule 2 (expression -> annotation .)
    WORD            shift and go to state 4
    LBRACE          shift and go to state 5

    annotation                     shift and go to state 3
    expression                     shift and go to state 7
    words                          shift and go to state 2

state 4

    (7) words -> WORD .
    (8) words -> WORD . words
    (7) words -> . WORD
    (8) words -> . WORD words

    LBRACE          reduce using rule 7 (words -> WORD .)
    $end            reduce using rule 7 (words -> WORD .)
    RBRACE          reduce using rule 7 (words -> WORD .)
    WORD            shift and go to state 4

    words                          shift and go to state 8

state 5

    (6) annotation -> LBRACE . expression RBRACE LPAREN WORD RPAREN
    (1) expression -> . words
    (2) expression -> . annotation
    (3) expression -> . words annotation
    (4) expression -> . words annotation expression
    (5) expression -> . annotation expression
    (7) words -> . WORD
    (8) words -> . WORD words
    (6) annotation -> . LBRACE expression RBRACE LPAREN WORD RPAREN

    WORD            shift and go to state 4
    LBRACE          shift and go to state 5

    expression                     shift and go to state 9
    words                          shift and go to state 2
    annotation                     shift and go to state 3

state 6

    (3) expression -> words annotation .
    (4) expression -> words annotation . expression
    (1) expression -> . words
    (2) expression -> . annotation
    (3) expression -> . words annotation
    (4) expression -> . words annotation expression
    (5) expression -> . annotation expression
    (7) words -> . WORD
    (8) words -> . WORD words
    (6) annotation -> . LBRACE expression RBRACE LPAREN WORD RPAREN

    $end            reduce using rule 3 (expression -> words annotation .)
    RBRACE          reduce using rule 3 (expression -> words annotation .)
    WORD            shift and go to state 4
    LBRACE          shift and go to state 5

    words                          shift and go to state 2
    annotation                     shift and go to state 3
    expression                     shift and go to state 10

state 7

    (5) expression -> annotation expression .

    $end            reduce using rule 5 (expression -> annotation expression .)
    RBRACE          reduce using rule 5 (expression -> annotation expression .)


state 8

    (8) words -> WORD words .

    LBRACE          reduce using rule 8 (words -> WORD words .)
    $end            reduce using rule 8 (words -> WORD words .)
    RBRACE          reduce using rule 8 (words -> WORD words .)


state 9

    (6) annotation -> LBRACE expression . RBRACE LPAREN WORD RPAREN

    RBRACE          shift and go to state 11


state 10

    (4) expression -> words annotation expression .

    $end            reduce using rule 4 (expression -> words annotation expression .)
    RBRACE          reduce using rule 4 (expression -> words annotation expression .)


state 11

    (6) annotation -> LBRACE expression RBRACE . LPAREN WORD RPAREN

    LPAREN          shift and go to state 12


state 12

    (6) annotation -> LBRACE expression RBRACE LPAREN . WORD RPAREN

    WORD            shift and go to state 13


state 13

    (6) annotation -> LBRACE expression RBRACE LPAREN WORD . RPAREN

    RPAREN          shift and go to state 14


state 14

    (6) annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN .

    WORD            reduce using rule 6 (annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN .)
    LBRACE          reduce using rule 6 (annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN .)
    $end            reduce using rule 6 (annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN .)
    RBRACE          reduce using rule 6 (annotation -> LBRACE expression RBRACE LPAREN WORD RPAREN .)

